% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find.R
\name{find_shinylive_app_json}
\alias{find_shinylive_app_json}
\title{Find and Validate Shinylive app.json}
\usage{
find_shinylive_app_json(base_url)
}
\arguments{
\item{base_url}{Character string. The base URL to search for app.json.}
}
\value{
A list with three components:
\itemize{
\item \code{valid} Logical indicating if a valid app.json was found
\item \code{url} Character string of the successful URL, or NULL if not found
\item \code{data} List containing the parsed JSON data if valid, NULL otherwise
}
}
\description{
Attempts to locate and validate a Shinylive app.json file from a given base URL.
The function tries multiple possible paths and validates both the HTTP response
and JSON structure.
}
\details{
The function performs the following steps:
\enumerate{
\item Generates three possible paths to check:
\itemize{
\item The base URL as provided
\item base URL + `"/app.json"``
\item Parent directory + \code{"/app.json"}
}
\item For each path:
\itemize{
\item Attempts an HTTP GET request
\item Verifies the content type is JSON
\item Parses and validates the JSON structure
\item Returns immediately if valid app.json is found
}
}
}
\examples{
\dontrun{
# Direct app.json URL
result <- find_shinylive_app_json("https://example.com/app.json")

# Directory containing app.json
result <- find_shinylive_app_json("https://example.com/myapp/")

# Check if valid
if (result$valid) {
  cat("Found app.json at:", result$url)
}
}
}
\keyword{internal}
