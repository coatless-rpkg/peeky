% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quarto-cell-parser.R
\name{parse_yaml_options}
\alias{parse_yaml_options}
\title{Parse YAML-style Options from Shinylive Code Blocks}
\usage{
parse_yaml_options(yaml_lines)
}
\arguments{
\item{yaml_lines}{Character vector. Each element should be a line containing
a YAML-style option in the format \code{'#| key: value'}. The \code{'#|'} prefix will
be stripped during processing.}
}
\value{
A named list of parsed options where:
\itemize{
\item Array values (e.g., \code{'[1, 2, 3]'}) are converted to character vectors
\item Boolean values ('true'/'false') are converted to logical values
\item Numeric values are converted to numeric type
\item Other values remain as character strings
}
}
\description{
Parses YAML-style configuration options from Shinylive code block headers.
These options appear as lines prefixed with \code{'#|'} and follow a simplified
YAML-like syntax for key-value pairs.
}
\details{
The function handles several value types:
\itemize{
\item \strong{Arrays:} Values in the format \code{'[item1, item2, ...]'}
\item \strong{Booleans:} Values 'true' or 'false'
\item \strong{Numbers:} Integer values
\item \strong{Strings:} All other values
}

Lines that don't contain a colon (\code{':'}) are ignored.
}
\examples{
\dontrun{
# Parse various types of options
yaml_lines <- c(
  "#| viewerHeight: 500",
  "#| components: [slider,button]",
  "#| fullWidth: true",
  "#| title: My App"
)
options <- parse_yaml_options(yaml_lines)
# Results in:
# list(
#   viewerHeight = 500,
#   components = c("slider", "button"),
#   fullWidth = TRUE,
#   title = "My App"
# )
}

}
\seealso{
parse_code_block
}
\keyword{internal}
