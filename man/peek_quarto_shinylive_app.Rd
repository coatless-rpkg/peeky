% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/peek.R
\name{peek_quarto_shinylive_app}
\alias{peek_quarto_shinylive_app}
\title{Extract Shinylive Applications from Quarto Documents}
\usage{
peek_quarto_shinylive_app(
  url,
  output_format = c("app-dir", "quarto"),
  output_path = NULL
)
}
\arguments{
\item{url}{Character string. URL of the Quarto document containing Shinylive
applications. The document should contain code blocks with class
\code{'shinylive-r'} or \code{'shinylive-python'}.}

\item{output_format}{Character string. Determines how the applications should be
extracted. Must be one of:
\itemize{
\item \code{"app-dir"}: Creates separate directories for each application
\item \code{"quarto"}: Combines all applications into a single Quarto document
}}

\item{output_path}{Character string or NULL. Where to write the extracted
applications. If NULL, uses default paths:
\itemize{
\item For "app-dir": "./converted_shiny_apps/"
\item For "quarto": "./converted_shiny_apps.qmd"
}}
}
\value{
An object of class \code{"shinylive_commands"} that provides:
\itemize{
\item Pretty-printed instructions via cli
\item Commands to run each extracted application
\item Information about output locations
\item Setup instructions for Quarto documents (if applicable)
}
}
\description{
Downloads a Quarto document and extracts all embedded Shinylive applications.
Applications can be extracted either as separate directories (for individual use)
or combined into a new Quarto document (for documentation). The function handles
both R and Python Shinylive applications.
}
\section{Output Formats}{

The two output formats serve different purposes:
\itemize{
\item \code{"app-dir"}:
\itemize{
\item Creates numbered directories (app_1, app_2, etc.)
\item Each directory contains a complete, runnable application
\item Includes metadata about the original application
\item Best for running or modifying individual applications
}
\item \code{"quarto"}:
\itemize{
\item Creates a single .qmd file containing all applications
\item Preserves original YAML options and file structure
\item Adds necessary Quarto configuration
\item Best for documentation or sharing multiple applications
}
}
}

\section{Error Handling}{


The function will error with informative messages if:
\itemize{
\item The URL cannot be accessed
\item No Shinylive applications are found in the document
\item The document structure is invalid
}
}

\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# Extract as separate applications
result <- peek_quarto_shinylive_app(
  "https://quarto-ext.github.io/shinylive",
  output_format = "app-dir"
)

# Combine into a new Quarto document
result <- peek_quarto_shinylive_app(
  "https://quarto-ext.github.io/shinylive",
  output_format = "quarto",
  output_path = "my_apps.qmd"
)

# Print will show instructions for running the apps
print(result)
\dontshow{\}) # examplesIf}
}
\seealso{
\itemize{
\item \code{\link[=find_shinylive_code]{find_shinylive_code()}} for the code block extraction
\item \code{\link[=write_apps_to_dirs]{write_apps_to_dirs()}} for directory output format
\item \code{\link[=write_apps_to_quarto]{write_apps_to_quarto()}} for Quarto document output format
}
}
