% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/writers.R
\name{write_apps_to_dirs}
\alias{write_apps_to_dirs}
\title{Write Multiple Shinylive Applications to Separate Directories}
\usage{
write_apps_to_dirs(apps, base_dir)
}
\arguments{
\item{apps}{List of parsed Shinylive applications. Each application should
contain:
\itemize{
\item \code{engine}: Character string identifying the app type (\code{"r"} or \code{"python"})
\item \code{options}: List of YAML-style options from the original code block
\item \code{files}: Named list of file definitions, each containing:
\itemize{
\item \code{name}: Character string of the file name
\item \code{content}: Character string of the file content
\item \code{type}: Character string indicating the file type
}
}}

\item{base_dir}{Character string. Base directory where application
subdirectories should be created. Will be created if it doesn't exist.}
}
\description{
Takes a list of parsed Shinylive applications and writes each to its own
numbered subdirectory. Creates consistently numbered directories with proper
padding (e.g., \code{app_01}, \code{app_02}) and preserves all application files and
metadata.
}
\details{
The function performs these steps:
\enumerate{
\item Creates the base directory if needed
\item Calculates proper padding for subdirectory numbers
\item For each application:
\itemize{
\item Creates a padded, numbered subdirectory (e.g., \code{app_01}, \code{app_02})
\item Writes all application files, preserving directory structure
\item Creates a metadata JSON file with engine and options info
}
}
}
\section{Directory Structure}{

Creates a directory structure like:

\if{html}{\out{<div class="sourceCode sh">}}\preformatted{base_dir/
|-- app_01/
|   |-- app.R
|   |-- data/
|   |   `-- example.csv
|   `-- shinylive_metadata.json
|-- app_02/
|   |-- app.py
|   `-- shinylive_metadata.json
`-- ...
}\if{html}{\out{</div>}}
}

\section{Metadata File}{


Each directory includes a \code{shinylive_metadata.json} file containing:

\if{html}{\out{<div class="sourceCode json">}}\preformatted{\{
  "engine": "r",
  "options": \{
    "viewerHeight": 500,
    "...": "..."
  \}
\}
}\if{html}{\out{</div>}}
}

\examples{
\dontrun{
# Example apps list structure
apps <- list(
  list(
    engine = "r",
    options = list(viewerHeight = 500),
    files = list(
      "app.R" = list(
        name = "app.R",
        content = "library(shiny)\n...",
        type = "text"
      )
    )
  ),
  list(
    engine = "python",
    options = list(),
    files = list(
      "app.py" = list(
        name = "app.py",
        content = "from shiny import App\n...",
        type = "text"
      )
    )
  )
)

write_apps_to_dirs(apps, "extracted_apps")
}
}
\seealso{
\itemize{
\item \code{\link[=padding_width]{padding_width()}} for directory number padding calculation
\item \code{\link[=write_apps_to_quarto]{write_apps_to_quarto()}} for alternative Quarto output format
}
}
\keyword{internal}
