% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/writers.R
\name{write_standalone_shinylive_app}
\alias{write_standalone_shinylive_app}
\title{Write Standalone Shinylive Application Files from JSON Data}
\usage{
write_standalone_shinylive_app(
  json_data,
  source_url,
  output_dir = "converted_shiny_app"
)
}
\arguments{
\item{json_data}{List. Parsed JSON data from a Shinylive \code{app.json} file.
Each element should be a list containing:
\itemize{
\item \code{name}: Character string of the file name
\item \code{content}: Character string of the file content
\item \code{type}: Character string indicating the file type
}}

\item{source_url}{Character string. The original URL from which the \code{app.json}
was downloaded. Used for reference and provenance tracking in the returned
object.}

\item{output_dir}{Character string. Directory where application files should
be extracted. Defaults to \code{"converted_shiny_app"}. Will be created if it
doesn't exist. Existing files in this directory may be overwritten.}
}
\value{
An object of class \code{"standalone_shinylive_app"} containing:
\itemize{
\item \code{files}: List of extracted files and their metadata
\item \code{output_dir}: Path to the directory containing extracted files
\item \code{source_url}: Original URL of the application
}
}
\description{
Extracts files from parsed Shinylive \code{app.json} data and writes them to a
specified directory. Creates a standalone application object containing
metadata and commands for running the application.
}
\details{
The function performs these steps:
\enumerate{
\item Creates the output directory if it doesn't exist
\item Iterates through each file in the JSON data
\item Writes each file to the output directory, preserving names
\item Creates a standalone application object with metadata
}

File paths are created relative to the output directory. Parent
directories in file paths will be created as needed.
}
\section{File Structure}{

Expected JSON data structure:

\if{html}{\out{<div class="sourceCode">}}\preformatted{[
  \{
    "name": "app.R",
    "content": "library(shiny)\\n...",
    "type": "text"
  \},
  \{
    "name": "data/example.csv",
    "content": "x,y\\n1,2\\n...",
    "type": "text"
  \}
]
}\if{html}{\out{</div>}}
}

\examples{
\dontshow{
.old_wd <- setwd(tempdir()) # examplesTempdir 
}
# Example JSON data structure
json_data <- list(
  list(
    name = "app.R",
    content = "library(shiny)\nui <- fluidPage()\n...",
    type = "text"
  ),
  list(
    name = "data.csv",
    content = "col1,col2\n1,2\n3,4",
    type = "text"
  )
)

app <- write_standalone_shinylive_app(
  json_data,
  "https://example.com/app.json",
  "my_app"
)
\dontshow{
setwd(.old_wd) # examplesTempdir 
}
}
\seealso{
\itemize{
\item \code{\link[=create_standalone_shinylive_app]{create_standalone_shinylive_app()}} for object creation
\item \code{\link[=validate_app_json]{validate_app_json()}} for JSON data validation
}
}
