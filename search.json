[{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Affero General Public License","title":"GNU Affero General Public License","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Affero General Public License","text":"GNU Affero General Public License free, copyleft license software kinds works, specifically designed ensure cooperation community case network server software. licenses software practical works designed take away freedom share change works. contrast, General Public Licenses intended guarantee freedom share change versions program–make sure remains free software users. speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. Developers use General Public Licenses protect rights two steps: (1) assert copyright software, (2) offer License gives legal permission copy, distribute /modify software. secondary benefit defending users’ freedom improvements made alternate versions program, receive widespread use, become available developers incorporate. Many developers free software heartened encouraged resulting cooperation. However, case software used network servers, result may fail come . GNU General Public License permits making modified version letting public access server without ever releasing source code public. GNU Affero General Public License designed specifically ensure , cases, modified source code becomes available community. requires operator network server provide source code modified version running users server. Therefore, public use modified version, publicly accessible server, gives public access source code modified version. older license, called Affero General Public License published Affero, designed accomplish similar goals. different license, version Affero GPL, Affero released new version Affero GPL permits relicensing license. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU Affero General Public License","text":"“License” refers version 3 GNU Affero General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU Affero General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU Affero General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU Affero General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU Affero General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU Affero General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU Affero General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU Affero General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU Affero General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU Affero General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU Affero General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU Affero General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU Affero General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"id_13-remote-network-interaction-use-with-the-gnu-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Remote Network Interaction; Use with the GNU General Public License.","title":"GNU Affero General Public License","text":"Notwithstanding provision License, modify Program, modified version must prominently offer users interacting remotely computer network (version supports interaction) opportunity receive Corresponding Source version providing access Corresponding Source network server charge, standard customary means facilitating copying software. Corresponding Source shall include Corresponding Source work covered version 3 GNU General Public License incorporated pursuant following paragraph. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU General Public License single combined work, convey resulting work. terms License continue apply part covered work, work combined remain governed version 3 GNU General Public License.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU Affero General Public License","text":"Free Software Foundation may publish revised /new versions GNU Affero General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU Affero General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU Affero General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU Affero General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU Affero General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU Affero General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU Affero General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU Affero General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. software can interact users remotely computer network, also make sure provides way users get source. example, program web application, interface display “Source” link leads users archive code. many ways offer source, different solutions better different programs; see section 13 specific requirements. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU AGPL, see https://www.gnu.org/licenses/.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as     published by the Free Software Foundation, either version 3 of the     License, or (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>."},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Joseph Balamuta. Author, maintainer.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Balamuta J (2024). peeky: Download Extract Shinylive Applications. R package version 0.1.0, https://github.com/coatless-rpkg/peeky, https://r-pkg.thecoatlessprofessor.com/peeky/.","code":"@Manual{,   title = {peeky: Download and Extract Shinylive Applications},   author = {James Joseph Balamuta},   year = {2024},   note = {R package version 0.1.0, https://github.com/coatless-rpkg/peeky},   url = {https://r-pkg.thecoatlessprofessor.com/peeky/}, }"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/index.html","id":"peeky-","dir":"","previous_headings":"","what":"Download and Extract Shinylive Applications","title":"Download and Extract Shinylive Applications","text":"peeky package helps extract, examine, run source code Shiny applications converted run browser using Shinylive. works standalone applications Quarto documents containing Shinylive components quarto-shinylive extension, supporting R Python Shiny applications.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/index.html","id":"about-shinylive","dir":"","previous_headings":"","what":"About Shinylive","title":"Download and Extract Shinylive Applications","text":"Shinylive converts existing Shiny applications run entirely web browser using WebAssembly versions R (webR) Python (Pyodide), eliminating need computational server. means application files accessible users design downloaded user’s browser application loaded. Shinylive ecosystem consists four main components: Shinylive Web Assets: posit-dev/shinylive R Shiny App Converter Package: posit-dev/r-shinylive Python Shiny App Convert Package: posit-dev/py-shinylive Shinylive Quarto Extension: quarto-ext/shinylive","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/index.html","id":"there-are-no-secrets-in-shinylive","dir":"","previous_headings":"","what":"There Are No Secrets in Shinylive","title":"Download and Extract Shinylive Applications","text":"peeky package developed demonstrate fundamental truth Shinylive applications stressed developers: “secrets.” Unlike traditional Shiny applications server-side code remains private, Shinylive apps run entirely web browser, making associated files accessible users. includes source code, data, files used application. result, Shinylive applications transparent design. package developed part ongoing discussions STATS 290 Shiny application security, transparency, deployment options. serves practical demonstration differences traditional server-side applications modern browser-based alternatives.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download and Extract Shinylive Applications","text":"can install development version peeky GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"coatless-rpkg/peeky\")"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Download and Extract Shinylive Applications","text":"use package, load R session: Inside package, three main functions:","code":"library(peeky)"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/index.html","id":"extracting-shinylive-applications","dir":"","previous_headings":"Usage","what":"Extracting Shinylive Applications","title":"Download and Extract Shinylive Applications","text":"suggest using peek_shinylive_app() function can handle standalone Shinylive applications Quarto documents Shinylive components. instance, take main Shinylive extension website, get: equivalent ran following: default, extracted files placed current working directory converted_shiny_apps directory. application placed subdirectory named app_1, app_2, etc. want specify different output directory, can providing output_path argument. can also specify output format quarto extract files single Quarto document. can switch peek_standalone_shinylive_app() function know URL standalone Shinylive application. example, take example application used conversion tutorial app.R R Shinylive app GitHub, get:","code":"peeky::peek_shinylive_app(\"https://quarto-ext.github.io/shinylive/\") #>  #> ── Shinylive Applications ────────────────────────────────────────────────────── #>  #> ── Shiny for Python Applications ── #>  #> Run in Terminal: #> shiny run --reload --launch-browser \"/Users/ronin/Documents/GitHub/r-pkg/peeky/converted_shiny_app/app_1/app.py\" #> shiny run --reload --launch-browser \"/Users/ronin/Documents/GitHub/r-pkg/peeky/converted_shiny_app/app_2/app.py\" #> shiny run --reload --launch-browser \"/Users/ronin/Documents/GitHub/r-pkg/peeky/converted_shiny_app/app_3/app.py\" #> shiny run --reload --launch-browser \"/Users/ronin/Documents/GitHub/r-pkg/peeky/converted_shiny_app/app_4/app.py\" peeky::peek_quarto_shinylive_app(\"https://quarto-ext.github.io/shinylive/\") # Extract the Shinylive application into a different directory peeky::peek_quarto_shinylive_app(\"https://quarto-ext.github.io/shinylive/\", output_format = \"quarto\") #>  #> ── Quarto Document with Shinylive Applications ───────────────────────────────── #>  #> ── Setup and Preview Steps ── #>  #> Step 1: Install the Shinylive extension: #> quarto add quarto-ext/shinylive #>  #> Step 2: Preview the document: #> quarto preview \"converted_shiny_apps.qmd\" #>  #> ── Contents ── #>  #> • R applications: 0 #> • Python applications: 4 peeky::peek_standalone_shinylive_app(\"https://tutorials.thecoatlessprofessor.com/convert-shiny-app-r-shinylive/\") #>  #> ── Standalone Shinylive Application ──────────────────────────────────────────── #> Type: R Shiny #> Run in R: #> shiny::runApp(\"/Users/ronin/Documents/GitHub/r-pkg/peeky/converted_shiny_app\") #>  #> ── Contents ── #>  #> .md files: #> • README.md #> .R files: #> • app.R #>  #> Total files: 2 #>  #> Location: '/Users/ronin/Documents/GitHub/r-pkg/peeky/converted_shiny_app'"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Download and Extract Shinylive Applications","text":"AGPL (>= 3)","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/index.html","id":"evolution","dir":"","previous_headings":"","what":"Evolution","title":"Download and Extract Shinylive Applications","text":"package represents refined comprehensive approach compared earlier tutorial focused solely standalone R Shinylive applications.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/index.html","id":"ethical-considerations","dir":"","previous_headings":"","what":"Ethical Considerations","title":"Download and Extract Shinylive Applications","text":"package educational purposes. Users : Use responsibly Respect intellectual property rights Understand viewable code doesn’t imply permission reuse Consider designing applications","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Download and Extract Shinylive Applications","text":"Thanks Shinylive team webR Pyodide teams enabling browser-based data science.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/create_quarto_shinylive_apps.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a quarto_shinylive_apps class object — create_quarto_shinylive_apps","title":"Create a quarto_shinylive_apps class object — create_quarto_shinylive_apps","text":"Create quarto_shinylive_apps class object","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/create_quarto_shinylive_apps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a quarto_shinylive_apps class object — create_quarto_shinylive_apps","text":"","code":"create_quarto_shinylive_apps(apps, output_format, output_path)"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/create_quarto_shinylive_apps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a quarto_shinylive_apps class object — create_quarto_shinylive_apps","text":"apps List parsed apps output_format format used (\"app-dir\" \"quarto\") output_path Path apps written","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/create_quarto_shinylive_apps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a quarto_shinylive_apps class object — create_quarto_shinylive_apps","text":"Object class \"quarto_shinylive_apps\"","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/create_standalone_shinylive_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a standalone_shinylive_app class object — create_standalone_shinylive_app","title":"Create a standalone_shinylive_app class object — create_standalone_shinylive_app","text":"Create standalone_shinylive_app class object","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/create_standalone_shinylive_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a standalone_shinylive_app class object — create_standalone_shinylive_app","text":"","code":"create_standalone_shinylive_app(app_data, output_dir, url)"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/create_standalone_shinylive_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a standalone_shinylive_app class object — create_standalone_shinylive_app","text":"app_data Data app output_dir Path app written url location app downloaded ","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/create_standalone_shinylive_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a standalone_shinylive_app class object — create_standalone_shinylive_app","text":"Object class \"standalone_shinylive_app\"","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/find_shinylive_app_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Find and Validate Shinylive app.json — find_shinylive_app_json","title":"Find and Validate Shinylive app.json — find_shinylive_app_json","text":"Attempts locate validate Shinylive app.json file given base URL. function tries multiple possible paths validates HTTP response JSON structure.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/find_shinylive_app_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find and Validate Shinylive app.json — find_shinylive_app_json","text":"","code":"find_shinylive_app_json(base_url)"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/find_shinylive_app_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find and Validate Shinylive app.json — find_shinylive_app_json","text":"base_url Character string. base URL search app.json.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/find_shinylive_app_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find and Validate Shinylive app.json — find_shinylive_app_json","text":"list three components: valid Logical indicating valid app.json found url Character string successful URL, NULL found data List containing parsed JSON data valid, NULL otherwise","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/find_shinylive_app_json.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find and Validate Shinylive app.json — find_shinylive_app_json","text":"function performs following steps: Generates three possible paths check: base URL provided base URL + `\"/app.json\"“ Parent directory + \"/app.json\" path: Attempts HTTP GET request Verifies content type JSON Parses validates JSON structure Returns immediately valid app.json found","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/find_shinylive_app_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find and Validate Shinylive app.json — find_shinylive_app_json","text":"","code":"if (FALSE) { # \\dontrun{ # Direct app.json URL result <- find_shinylive_app_json(\"https://example.com/app.json\")  # Directory containing app.json result <- find_shinylive_app_json(\"https://example.com/myapp/\")  # Check if valid if (result$valid) {   cat(\"Found app.json at:\", result$url) } } # }"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/find_shinylive_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Shinylive Code Blocks in Quarto HTML — find_shinylive_code","title":"Find Shinylive Code Blocks in Quarto HTML — find_shinylive_code","text":"Parses HTML content extract process Shinylive code blocks R Python applications. function identifies code blocks class 'shinylive-r' 'shinylive-python' processes content structured application data.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/find_shinylive_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Shinylive Code Blocks in Quarto HTML — find_shinylive_code","text":"","code":"find_shinylive_code(html)"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/find_shinylive_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Shinylive Code Blocks in Quarto HTML — find_shinylive_code","text":"html Character string containing HTML content. HTML contain code blocks class 'shinylive-r' 'shinylive-python' processed.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/find_shinylive_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Shinylive Code Blocks in Quarto HTML — find_shinylive_code","text":"list parsed Shinylive applications. list element contains: engine: Character string indicating application type (\"r\" \"python\") options: List parsed YAML-style options code block files: List file definitions, file contains: name: Character string file name content: Character string file content type: Character string indicating file type","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/find_shinylive_code.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Shinylive Code Blocks in Quarto HTML — find_shinylive_code","text":"function performs following steps: Parses HTML content using rvest Extracts code blocks classes 'shinylive-r' 'shinylive-python' code block: Determines engine type 'data-engine' attribute Extracts code text content Parses code block structure using parse_code_block() Code blocks follow Shinylive format optional YAML-style options (prefixed '#|') file markers (prefixed '## file:').","code":""},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/find_shinylive_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Shinylive Code Blocks in Quarto HTML — find_shinylive_code","text":"","code":"if (FALSE) { # \\dontrun{ html_content <- ' <pre class=\"shinylive-r\" data-engine=\"r\"> #| viewerHeight: 500 ## file: app.R library(shiny) ui <- fluidPage() server <- function(input, output) {} shinyApp(ui, server) <\/pre> ' apps <- find_shinylive_code(html_content) } # }"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/padding_width.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate number of digits needed for padding — padding_width","title":"Calculate number of digits needed for padding — padding_width","text":"Calculate number digits needed padding","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/padding_width.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate number of digits needed for padding — padding_width","text":"","code":"padding_width(n)"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/padding_width.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate number of digits needed for padding — padding_width","text":"n Number determine digits ","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/padding_width.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate number of digits needed for padding — padding_width","text":"Number digits needed","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/parse_code_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a Single Shinylive Code Block — parse_code_block","title":"Parse a Single Shinylive Code Block — parse_code_block","text":"Parses content Shinylive code block, extracting YAML-style options, file definitions, content. Handles single-file multi-file applications R Python.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/parse_code_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a Single Shinylive Code Block — parse_code_block","text":"","code":"parse_code_block(code_text, engine)"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/parse_code_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a Single Shinylive Code Block — parse_code_block","text":"code_text Character string. raw text content Shinylive code block, may contain YAML-style options, file markers, file content. engine Character string. type Shinylive application, either \"r\" \"python\". Determines default file extension explicit file specified.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/parse_code_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a Single Shinylive Code Block — parse_code_block","text":"list three components: engine: Character string indicating application type (\"r\" \"python\") options: List parsed YAML-style options block headers files: Named list file definitions, file contains: name: Character string file name content: Character string file content type: Character string indicating file type (defaults `\"text\"“)","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/parse_code_block.html","id":"code-block-structure","dir":"Reference","previous_headings":"","what":"Code Block Structure","title":"Parse a Single Shinylive Code Block — parse_code_block","text":"code block can contain several types lines: YAML-style options: Lines starting `'#|'“ File markers: Lines starting '## file:' Type markers: Lines starting '## type:' Content: non-empty lines single-file applications explicit file marker, content automatically placed : \"app.R\" R applications \"app.py\" Python applications","code":""},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/parse_code_block.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse a Single Shinylive Code Block — parse_code_block","text":"","code":"if (FALSE) { # \\dontrun{ # Single-file R application code <- ' #| viewerHeight: 500 library(shiny) ui <- fluidPage() server <- function(input, output) {} shinyApp(ui, server) ' result1 <- parse_code_block(code, \"r\")  # Multi-file Python application code <- ' #| fullWidth: true ## file: app.py from shiny import App, ui app = App(app_ui) ## file: requirements.txt ## type: text shiny>=0.5.0 ' result2 <- parse_code_block(code, \"python\") } # }"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/parse_yaml_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse YAML-style Options from Shinylive Code Blocks — parse_yaml_options","title":"Parse YAML-style Options from Shinylive Code Blocks — parse_yaml_options","text":"Parses YAML-style configuration options Shinylive code block headers. options appear lines prefixed '#|' follow simplified YAML-like syntax key-value pairs.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/parse_yaml_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse YAML-style Options from Shinylive Code Blocks — parse_yaml_options","text":"","code":"parse_yaml_options(yaml_lines)"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/parse_yaml_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse YAML-style Options from Shinylive Code Blocks — parse_yaml_options","text":"yaml_lines Character vector. element line containing YAML-style option format '#| key: value'. '#|' prefix stripped processing.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/parse_yaml_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse YAML-style Options from Shinylive Code Blocks — parse_yaml_options","text":"named list parsed options : Array values (e.g., '[1, 2, 3]') converted character vectors Boolean values ('true'/'false') converted logical values Numeric values converted numeric type values remain character strings","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/parse_yaml_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse YAML-style Options from Shinylive Code Blocks — parse_yaml_options","text":"function handles several value types: Arrays: Values format '[item1, item2, ...]' Booleans: Values 'true' 'false' Numbers: Integer values Strings: values Lines contain colon (':') ignored.","code":""},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/parse_yaml_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse YAML-style Options from Shinylive Code Blocks — parse_yaml_options","text":"","code":"if (FALSE) { # \\dontrun{ # Parse various types of options yaml_lines <- c(   \"#| viewerHeight: 500\",   \"#| components: [slider,button]\",   \"#| fullWidth: true\",   \"#| title: My App\" ) options <- parse_yaml_options(yaml_lines) # Results in: # list( #   viewerHeight = 500, #   components = c(\"slider\", \"button\"), #   fullWidth = TRUE, #   title = \"My App\" # ) } # }"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_quarto_shinylive_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Shinylive Applications from Quarto Documents — peek_quarto_shinylive_app","title":"Extract Shinylive Applications from Quarto Documents — peek_quarto_shinylive_app","text":"Downloads Quarto document extracts embedded Shinylive applications. Applications can extracted either separate directories (individual use) combined new Quarto document (documentation). function handles R Python Shinylive applications.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_quarto_shinylive_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Shinylive Applications from Quarto Documents — peek_quarto_shinylive_app","text":"","code":"peek_quarto_shinylive_app(   url,   output_format = c(\"app-dir\", \"quarto\"),   output_path = NULL )"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_quarto_shinylive_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Shinylive Applications from Quarto Documents — peek_quarto_shinylive_app","text":"url Character string. URL Quarto document containing Shinylive applications. document contain code blocks class 'shinylive-r' 'shinylive-python'. output_format Character string. Determines applications extracted. Must one : \"app-dir\": Creates separate directories application \"quarto\": Combines applications single Quarto document output_path Character string NULL. write extracted applications. NULL, uses default paths: \"app-dir\": \"./converted_shiny_apps/\" \"quarto\": \"./converted_shiny_apps.qmd\"","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_quarto_shinylive_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Shinylive Applications from Quarto Documents — peek_quarto_shinylive_app","text":"object class \"shinylive_commands\" provides: Pretty-printed instructions via cli Commands run extracted application Information output locations Setup instructions Quarto documents (applicable)","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_quarto_shinylive_app.html","id":"output-formats","dir":"Reference","previous_headings":"","what":"Output Formats","title":"Extract Shinylive Applications from Quarto Documents — peek_quarto_shinylive_app","text":"two output formats serve different purposes: \"app-dir\": Creates numbered directories (app_1, app_2, etc.) directory contains complete, runnable application Includes metadata original application Best running modifying individual applications \"quarto\": Creates single .qmd file containing applications Preserves original YAML options file structure Adds necessary Quarto configuration Best documentation sharing multiple applications","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_quarto_shinylive_app.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"Extract Shinylive Applications from Quarto Documents — peek_quarto_shinylive_app","text":"function error informative messages : URL accessed Shinylive applications found document document structure invalid","code":""},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_quarto_shinylive_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Shinylive Applications from Quarto Documents — peek_quarto_shinylive_app","text":"","code":"if (FALSE) { # interactive() # Extract as separate applications result <- peek_quarto_shinylive_app(   \"https://quarto-ext.github.io/shinylive\",   output_format = \"app-dir\" )  # Combine into a new Quarto document result <- peek_quarto_shinylive_app(   \"https://quarto-ext.github.io/shinylive\",   output_format = \"quarto\",   output_path = \"my_apps.qmd\" )  # Print will show instructions for running the apps print(result) }"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_shinylive_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Extract Shinylive Applications from URLs — peek_shinylive_app","title":"Download and Extract Shinylive Applications from URLs — peek_shinylive_app","text":"Downloads extracts Shinylive applications various URL sources. function can handle standalone Shinylive applications Quarto documents containing embedded Shinylive applications. automatically detects application type extracts necessary files.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_shinylive_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Extract Shinylive Applications from URLs — peek_shinylive_app","text":"","code":"peek_shinylive_app(url, output_dir = \"converted_shiny_app\")"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_shinylive_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Extract Shinylive Applications from URLs — peek_shinylive_app","text":"url Character string. URL pointing one : standalone Shinylive application (containing app.json) directory containing app.json Quarto document embedded Shinylive applications output_dir Character string. Directory application files extracted. Defaults \"converted_shiny_app\". created exist.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_shinylive_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and Extract Shinylive Applications from URLs — peek_shinylive_app","text":"object containing extracted application information: standalone apps: Object class \"standalone_shinylive_app\" Quarto documents: Object class \"quarto_shinylive_apps\" object types implement custom print methods display: Application type (R Python) Commands run application List extracted files Output directory location","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_shinylive_app.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and Extract Shinylive Applications from URLs — peek_shinylive_app","text":"function follows steps: Downloads analyzes content provided URL Determines content Quarto document standalone application Quarto documents: Extracts embedded Shinylive applications Creates separate directories application standalone applications: Locates validates app.json file Extracts application files specified directory","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_shinylive_app.html","id":"url-resolution","dir":"Reference","previous_headings":"","what":"URL Resolution","title":"Download and Extract Shinylive Applications from URLs — peek_shinylive_app","text":"function attempts several strategies find app.json: Direct use provided URL Appending \"app.json\" URL Checking parent directory","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_shinylive_app.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"Download and Extract Shinylive Applications from URLs — peek_shinylive_app","text":"function error informative messages : URL accessed valid Shinylive application found app.json structure invalid","code":""},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_shinylive_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Extract Shinylive Applications from URLs — peek_shinylive_app","text":"","code":"if (FALSE) { # interactive() # Download a standalone Shinylive application url <- \"https://tutorials.thecoatlessprofessor.com/convert-shiny-app-r-shinylive/\"  app <- peek_shinylive_app(url)  # Extract to a specific directory app <- peek_shinylive_app(   url,   output_dir = \"my_extracted_app\" )  # Download from a Quarto document apps <- peek_shinylive_app(\"https://quarto-ext.github.io/shinylive/\") }"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_standalone_shinylive_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Extract a Standalone Shinylive Application — peek_standalone_shinylive_app","title":"Download and Extract a Standalone Shinylive Application — peek_standalone_shinylive_app","text":"Downloads extracts standalone Shinylive application URL. function locates application's app.json file, validates structure, extracts application files local directory. Works R Python Shinylive applications.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_standalone_shinylive_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Extract a Standalone Shinylive Application — peek_standalone_shinylive_app","text":"","code":"peek_standalone_shinylive_app(url, output_dir = \"converted_shiny_app\")"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_standalone_shinylive_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Extract a Standalone Shinylive Application — peek_standalone_shinylive_app","text":"url Character string. URL pointing either: Shinylive app.json file directly directory containing app.json function automatically append \"app.json\" directory URLs. output_dir Character string. Directory application files extracted. Defaults \"converted_shiny_app\". created exist. directory already exists, files may overwritten.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_standalone_shinylive_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and Extract a Standalone Shinylive Application — peek_standalone_shinylive_app","text":"object class \"standalone_shinylive_app\" containing: List extracted files contents Source URL application Output directory location object custom print method displays: Application type (R Python) Command run application List extracted files type File locations","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_standalone_shinylive_app.html","id":"file-structure","dir":"Reference","previous_headings":"","what":"File Structure","title":"Download and Extract a Standalone Shinylive Application — peek_standalone_shinylive_app","text":"valid Shinylive application app.json file containing: least one application file (e.g., app.R app.py) Optional supporting files (e.g., data files, requirements.txt) File metadata including name, content, type","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_standalone_shinylive_app.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"Download and Extract a Standalone Shinylive Application — peek_standalone_shinylive_app","text":"function error informative messages : app.json file found URL app.json file invalid structure app.json file downloaded Required application files missing","code":""},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peek_standalone_shinylive_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Extract a Standalone Shinylive Application — peek_standalone_shinylive_app","text":"","code":"if (FALSE) { # interactive()  # Download from a direct app.json URL app <- peek_standalone_shinylive_app(   \"https://tutorials.thecoatlessprofessor.com/convert-shiny-app-r-shinylive/app.json\" )  # Download from a directory URL (app.json will be appended) app <- peek_standalone_shinylive_app(   \"https://tutorials.thecoatlessprofessor.com/convert-shiny-app-r-shinylive/\",   output_dir = \"my_local_app\" )  # Print shows how to run the application print(app) }"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peeky-package.html","id":null,"dir":"Reference","previous_headings":"","what":"peeky: Download and Extract Shinylive Applications — peeky-package","title":"peeky: Download and Extract Shinylive Applications — peeky-package","text":"Peeks Quarto documents standalone Shinylive applications download extract Shiny application source. Handles extraction application files app.json format directory structure.","code":""},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/peeky-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"peeky: Download and Extract Shinylive Applications — peeky-package","text":"Maintainer: James Joseph Balamuta james.balamuta@gmail.com","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/print.quarto_shinylive_apps.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for quarto_shinylive_apps objects — print.quarto_shinylive_apps","title":"Print method for quarto_shinylive_apps objects — print.quarto_shinylive_apps","text":"Print method quarto_shinylive_apps objects","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/print.quarto_shinylive_apps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for quarto_shinylive_apps objects — print.quarto_shinylive_apps","text":"","code":"# S3 method for class 'quarto_shinylive_apps' print(x, ...)"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/print.quarto_shinylive_apps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for quarto_shinylive_apps objects — print.quarto_shinylive_apps","text":"x Object class \"quarto_shinylive_apps\" ... Additional arguments passed print","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/print.standalone_shinylive_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for standalone_shinylive_app objects — print.standalone_shinylive_app","title":"Print method for standalone_shinylive_app objects — print.standalone_shinylive_app","text":"Print method standalone_shinylive_app objects","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/print.standalone_shinylive_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for standalone_shinylive_app objects — print.standalone_shinylive_app","text":"","code":"# S3 method for class 'standalone_shinylive_app' print(x, ...)"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/print.standalone_shinylive_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for standalone_shinylive_app objects — print.standalone_shinylive_app","text":"x Object class \"standalone_shinylive_app\" ... Additional arguments passed print","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/validate_app_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Shinylive app.json Structure — validate_app_json","title":"Validate Shinylive app.json Structure — validate_app_json","text":"Validates parsed app.json structure meets requirements Shinylive application. Checks proper list structure, required fields, non-empty content. Provides detailed error messages validation fails.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/validate_app_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Shinylive app.json Structure — validate_app_json","text":"","code":"validate_app_json(json_data)"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/validate_app_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Shinylive app.json Structure — validate_app_json","text":"json_data List. Parsed JSON data app.json file. list element represents file contains: name: Character string file name content: Character string file content type: Character string indicating file type","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/validate_app_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Shinylive app.json Structure — validate_app_json","text":"Logical TRUE validation passes. validation fails, throws error detailed information validation failure using cli_abort().","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/validate_app_json.html","id":"validation-rules","dir":"Reference","previous_headings":"","what":"Validation Rules","title":"Validate Shinylive app.json Structure — validate_app_json","text":"function checks requirements: json_data must list json_data must contain least one element element must list (representing file) file list must contain required fields: name content type","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/validate_app_json.html","id":"error-messages","dir":"Reference","previous_headings":"","what":"Error Messages","title":"Validate Shinylive app.json Structure — validate_app_json","text":"function provides detailed error messages cases: list: \"Expected list array files\" Empty list: \"File list empty\" Invalid file entry: \"entry must file object\" Missing fields: Lists specific missing required fields","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/validate_app_json.html","id":"expected-json-structure","dir":"Reference","previous_headings":"","what":"Expected JSON Structure","title":"Validate Shinylive app.json Structure — validate_app_json","text":"expected JSON structure array objects, object represents file application.","code":"[   {     \"name\": \"app.R\",     \"content\": \"library(shiny)\\n...\",     \"type\": \"text\"   },   {     \"name\": \"data/example.csv\",     \"content\": \"x,y\\n1,2\\n...\",     \"type\": \"text\"   } ]"},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/validate_app_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Shinylive app.json Structure — validate_app_json","text":"","code":"if (FALSE) { # \\dontrun{ # Valid structure valid_data <- list(   list(     name = \"app.R\",     content = \"library(shiny)\\n...\",     type = \"text\"   ),   list(     name = \"data.csv\",     content = \"x,y\\n1,2\",     type = \"text\"   ) ) validate_app_json(valid_data)  # Returns TRUE  # Invalid structures that will error: validate_app_json(list())  # Empty list validate_app_json(list(   list(name = \"app.R\")  # Missing required fields )) } # }"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_apps_to_dirs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Multiple Shinylive Applications to Separate Directories — write_apps_to_dirs","title":"Write Multiple Shinylive Applications to Separate Directories — write_apps_to_dirs","text":"Takes list parsed Shinylive applications writes numbered subdirectory. Creates consistently numbered directories proper padding (e.g., app_01, app_02) preserves application files metadata.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_apps_to_dirs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Multiple Shinylive Applications to Separate Directories — write_apps_to_dirs","text":"","code":"write_apps_to_dirs(apps, base_dir)"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_apps_to_dirs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Multiple Shinylive Applications to Separate Directories — write_apps_to_dirs","text":"apps List parsed Shinylive applications. application contain: engine: Character string identifying app type (\"r\" \"python\") options: List YAML-style options original code block files: Named list file definitions, containing: name: Character string file name content: Character string file content type: Character string indicating file type base_dir Character string. Base directory application subdirectories created. created exist.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_apps_to_dirs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write Multiple Shinylive Applications to Separate Directories — write_apps_to_dirs","text":"function performs steps: Creates base directory needed Calculates proper padding subdirectory numbers application: Creates padded, numbered subdirectory (e.g., app_01, app_02) Writes application files, preserving directory structure Creates metadata JSON file engine options info","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_apps_to_dirs.html","id":"directory-structure","dir":"Reference","previous_headings":"","what":"Directory Structure","title":"Write Multiple Shinylive Applications to Separate Directories — write_apps_to_dirs","text":"Creates directory structure like:","code":"base_dir/   ├── app_01/   │   ├── app.R   │   ├── data/   │   │   └── example.csv   │   └── shinylive_metadata.json   ├── app_02/   │   ├── app.py   │   └── shinylive_metadata.json   └── ..."},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_apps_to_dirs.html","id":"metadata-file","dir":"Reference","previous_headings":"","what":"Metadata File","title":"Write Multiple Shinylive Applications to Separate Directories — write_apps_to_dirs","text":"directory includes shinylive_metadata.json file containing:","code":"{   \"engine\": \"r\",   \"options\": {     \"viewerHeight\": 500,     \"...\": \"...\"   } }"},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_apps_to_dirs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write Multiple Shinylive Applications to Separate Directories — write_apps_to_dirs","text":"","code":"if (FALSE) { # \\dontrun{ # Example apps list structure apps <- list(   list(     engine = \"r\",     options = list(viewerHeight = 500),     files = list(       \"app.R\" = list(         name = \"app.R\",         content = \"library(shiny)\\n...\",         type = \"text\"       )     )   ),   list(     engine = \"python\",     options = list(),     files = list(       \"app.py\" = list(         name = \"app.py\",         content = \"from shiny import App\\n...\",         type = \"text\"       )     )   ) )  write_apps_to_dirs(apps, \"extracted_apps\") } # }"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_apps_to_quarto.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Shinylive Applications to a Quarto Document — write_apps_to_quarto","title":"Write Shinylive Applications to a Quarto Document — write_apps_to_quarto","text":"Converts list parsed Shinylive applications single Quarto document. Creates properly formatted .qmd file YAML frontmatter, organized sections application, correctly formatted code blocks necessary markers options.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_apps_to_quarto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Shinylive Applications to a Quarto Document — write_apps_to_quarto","text":"","code":"write_apps_to_quarto(apps, qmd_path)"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_apps_to_quarto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Shinylive Applications to a Quarto Document — write_apps_to_quarto","text":"apps List parsed Shinylive applications. application contain: engine: Character string identifying app type (\"r\" \"python\") options: List YAML-style options original code block files: Named list file definitions, containing: name: Character string file name content: Character string file content type: Character string indicating file type qmd_path Character string. Path Quarto document written. end .qmd extension. Parent directory created exist.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_apps_to_quarto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write Shinylive Applications to a Quarto Document — write_apps_to_quarto","text":"function performs steps: Creates YAML frontmatter required Quarto settings application: Adds section header application number Creates code block appropriate engine (shinylive-r/shinylive-python) Converts adds application options Adds file markers content file Properly closes code block Writes complete document specified path","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_apps_to_quarto.html","id":"document-structure","dir":"Reference","previous_headings":"","what":"Document Structure","title":"Write Shinylive Applications to a Quarto Document — write_apps_to_quarto","text":"Creates Quarto document structure:","code":"--- title: Extracted Shinylive Applications filters:   - shinylive ---  # Shinylive Applications  ## Application 1  ```{shinylive-r} #| viewerHeight: 500 ## file: app.R ## type: text library(shiny) ... ```  ## Application 2 ..."},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_apps_to_quarto.html","id":"option-formatting","dir":"Reference","previous_headings":"","what":"Option Formatting","title":"Write Shinylive Applications to a Quarto Document — write_apps_to_quarto","text":"Options converted YAML format based type: Logical: #| option: true #| option: false Numeric: #| option: 500 Character: Single: #| option: \"value\" Vector: #| option: [\"value1\", \"value2\"]","code":""},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_apps_to_quarto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write Shinylive Applications to a Quarto Document — write_apps_to_quarto","text":"","code":"if (FALSE) { # \\dontrun{ # Example apps list structure apps <- list(   list(     engine = \"r\",     options = list(       viewerHeight = 500,       fullWidth = TRUE     ),     files = list(       \"app.R\" = list(         name = \"app.R\",         content = \"library(shiny)\\n...\",         type = \"text\"       )     )   ) )  write_apps_to_quarto(apps, \"applications.qmd\") } # }"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_standalone_shinylive_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Standalone Shinylive Application Files from JSON Data — write_standalone_shinylive_app","title":"Write Standalone Shinylive Application Files from JSON Data — write_standalone_shinylive_app","text":"Extracts files parsed Shinylive app.json data writes specified directory. Creates standalone application object containing metadata commands running application.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_standalone_shinylive_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Standalone Shinylive Application Files from JSON Data — write_standalone_shinylive_app","text":"","code":"write_standalone_shinylive_app(   json_data,   source_url,   output_dir = \"converted_shiny_app\" )"},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_standalone_shinylive_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Standalone Shinylive Application Files from JSON Data — write_standalone_shinylive_app","text":"json_data List. Parsed JSON data Shinylive app.json file. element list containing: name: Character string file name content: Character string file content type: Character string indicating file type source_url Character string. original URL app.json downloaded. Used reference provenance tracking returned object. output_dir Character string. Directory application files extracted. Defaults \"converted_shiny_app\". created exist. Existing files directory may overwritten.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_standalone_shinylive_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write Standalone Shinylive Application Files from JSON Data — write_standalone_shinylive_app","text":"object class \"standalone_shinylive_app\" containing: files: List extracted files metadata output_dir: Path directory containing extracted files source_url: Original URL application","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_standalone_shinylive_app.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write Standalone Shinylive Application Files from JSON Data — write_standalone_shinylive_app","text":"function performs steps: Creates output directory exist Iterates file JSON data Writes file output directory, preserving names Creates standalone application object metadata File paths created relative output directory. Parent directories file paths created needed.","code":""},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_standalone_shinylive_app.html","id":"file-structure","dir":"Reference","previous_headings":"","what":"File Structure","title":"Write Standalone Shinylive Application Files from JSON Data — write_standalone_shinylive_app","text":"Expected JSON data structure:","code":"[   {     \"name\": \"app.R\",     \"content\": \"library(shiny)\\n...\",     \"type\": \"text\"   },   {     \"name\": \"data/example.csv\",     \"content\": \"x,y\\n1,2\\n...\",     \"type\": \"text\"   } ]"},{"path":[]},{"path":"https://r-pkg.thecoatlessprofessor.com/peeky/reference/write_standalone_shinylive_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write Standalone Shinylive Application Files from JSON Data — write_standalone_shinylive_app","text":"","code":"if (FALSE) { # \\dontrun{ # Example JSON data structure json_data <- list(   list(     name = \"app.R\",     content = \"library(shiny)\\nui <- fluidPage()\\n...\",     type = \"text\"   ),   list(     name = \"data.csv\",     content = \"col1,col2\\n1,2\\n3,4\",     type = \"text\"   ) )  app <- write_standalone_shinylive_app(   json_data,   \"https://example.com/app.json\",   \"my_app\" ) } # }"}]
